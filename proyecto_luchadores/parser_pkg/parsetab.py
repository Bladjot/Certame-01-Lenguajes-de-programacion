
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaACCIONES ALTA ALTURA BAJA BLOQUEO COMA COMBOS CONFIG COSTO DANIO DISTINTO DOS_PUNTOS FORMA FRONTAL GIRATORIA GOLPE HP ID IGUAL IGUAL_IGUAL INICIA LATERAL LLAVE_ABRE LLAVE_CIERRA LUCHADOR LUCHADORES MAYOR MAYOR_IGUAL MEDIA MENOR MENOR_IGUAL NO NUMERO OPONENTE PAREN_ABRE PAREN_CIERRA PATADA PELEA PUNTO PUNTO_Y_COMA SELF SI SIMULACION SINO ST STATS ST_REQ TURNO TURNOS_MAX USA VSprograma : definiciones bloque_simulaciondefiniciones : definicion definiciones\n| definiciondefinicion : cabecera cuerpo LLAVE_CIERRAcabecera : LUCHADOR ID LLAVE_ABREcuerpo : stats bloque_acciones bloque_combosstats : STATS PAREN_ABRE HP IGUAL NUMERO COMA ST IGUAL NUMERO PAREN_CIERRA PUNTO_Y_COMAbloque_acciones : ACCIONES LLAVE_ABRE lista_acciones LLAVE_CIERRAlista_acciones : accion lista_acciones\n| accionaccion : GOLPE DOS_PUNTOS lista_golpes PUNTO_Y_COMA\n| PATADA DOS_PUNTOS lista_golpes PUNTO_Y_COMA\n| BLOQUEO DOS_PUNTOS ID PUNTO_Y_COMAlista_golpes : golpe\n| golpe COMA lista_golpesgolpe : ID PAREN_ABRE atributos PAREN_CIERRAatributos : atributo\n| atributo COMA atributosatributo : DANIO IGUAL NUMERO\n| COSTO IGUAL NUMERO\n| ALTURA IGUAL valor_altura\n| FORMA IGUAL valor_forma\n| GIRATORIA IGUAL valor_girovalor_altura : ALTA\n| MEDIA\n| BAJAvalor_forma : FRONTAL\n| LATERALvalor_giro : SI\n| NObloque_combos : COMBOS LLAVE_ABRE lista_combos LLAVE_CIERRAlista_combos : combo lista_combos\n| combocombo : ID PAREN_ABRE ST_REQ IGUAL NUMERO PAREN_CIERRA LLAVE_ABRE lista_ids LLAVE_CIERRAlista_ids : ID\n| ID COMA lista_idsbloque_simulacion : SIMULACION LLAVE_ABRE configuracion pelea LLAVE_CIERRAconfiguracion : CONFIG LLAVE_ABRE LUCHADORES DOS_PUNTOS ID VS ID PUNTO_Y_COMA INICIA DOS_PUNTOS ID PUNTO_Y_COMA TURNOS_MAX DOS_PUNTOS NUMERO PUNTO_Y_COMA LLAVE_CIERRApelea : PELEA LLAVE_ABRE lista_turnos LLAVE_CIERRAlista_turnos : turno\n| turno lista_turnosturno : TURNO ID LLAVE_ABRE lista_instrucciones LLAVE_CIERRAlista_instrucciones : instruccion\n| instruccion lista_instruccionesinstruccion : USA ID PUNTO_Y_COMA\n| SI PAREN_ABRE condicion PAREN_CIERRA LLAVE_ABRE lista_instrucciones LLAVE_CIERRA\n| SI PAREN_ABRE condicion PAREN_CIERRA LLAVE_ABRE lista_instrucciones LLAVE_CIERRA SINO LLAVE_ABRE lista_instrucciones LLAVE_CIERRAcondicion : sujeto_condicion PUNTO atributo_condicion operador NUMEROsujeto_condicion : SELF\n| OPONENTEatributo_condicion : HP\n| SToperador : MENOR\n| MAYOR\n| MENOR_IGUAL\n| MAYOR_IGUAL\n| IGUAL_IGUAL\n| DISTINTO'
    
_lr_action_items = {'LUCHADOR':([0,3,14,],[5,5,-4,]),'$end':([1,6,35,],[0,-1,-37,]),'SIMULACION':([2,3,8,14,],[7,-3,-2,-4,]),'STATS':([4,18,],[11,-5,]),'ID':([5,28,39,43,44,45,49,50,66,72,85,123,127,135,136,],[12,40,40,56,56,58,62,63,56,87,99,128,134,128,-34,]),'LLAVE_ABRE':([7,12,16,20,22,26,62,102,125,150,],[13,18,23,27,28,36,71,123,130,152,]),'LLAVE_CIERRA':([9,21,25,29,30,38,39,42,47,48,51,52,60,61,65,68,69,83,84,97,98,117,128,129,136,137,146,147,154,155,156,],[14,-6,35,41,-10,51,-33,-9,60,-40,-31,-32,-39,-41,-11,-12,-13,97,-43,-42,-44,-45,-35,136,-34,147,-36,-46,156,157,-47,]),'ACCIONES':([10,124,],[16,-7,]),'PAREN_ABRE':([11,40,56,86,],[17,53,67,100,]),'CONFIG':([13,],[20,]),'COMBOS':([15,41,],[22,-8,]),'HP':([17,126,],[24,132,]),'PELEA':([19,157,],[26,-38,]),'GOLPE':([23,30,65,68,69,],[31,31,-11,-12,-13,]),'PATADA':([23,30,65,68,69,],[32,32,-11,-12,-13,]),'BLOQUEO':([23,30,65,68,69,],[33,33,-11,-12,-13,]),'IGUAL':([24,64,70,77,78,79,80,81,],[34,73,82,91,92,93,94,95,]),'LUCHADORES':([27,],[37,]),'DOS_PUNTOS':([31,32,33,37,122,149,],[43,44,45,50,127,151,]),'NUMERO':([34,73,82,91,92,138,139,140,141,142,143,144,151,],[46,88,96,104,105,148,-53,-54,-55,-56,-57,-58,153,]),'TURNO':([36,48,97,],[49,49,-42,]),'COMA':([46,55,76,89,104,105,106,107,108,109,110,111,112,113,114,115,128,],[59,66,90,-16,-19,-20,-21,-24,-25,-26,-22,-27,-28,-23,-29,-30,135,]),'ST_REQ':([53,],[64,]),'PUNTO_Y_COMA':([54,55,57,58,74,87,89,99,116,134,153,],[65,-14,68,69,-15,101,-16,117,124,145,155,]),'ST':([59,126,],[70,133,]),'VS':([63,],[72,]),'DANIO':([67,90,],[77,77,]),'COSTO':([67,90,],[78,78,]),'ALTURA':([67,90,],[79,79,]),'FORMA':([67,90,],[80,80,]),'GIRATORIA':([67,90,],[81,81,]),'USA':([71,84,117,130,147,152,156,],[85,85,-45,85,-46,85,-47,]),'SI':([71,84,95,117,130,147,152,156,],[86,86,114,-45,86,-46,86,-47,]),'PAREN_CIERRA':([75,76,88,96,103,104,105,106,107,108,109,110,111,112,113,114,115,118,148,],[89,-17,102,116,-18,-19,-20,-21,-24,-25,-26,-22,-27,-28,-23,-29,-30,125,-48,]),'ALTA':([93,],[107,]),'MEDIA':([93,],[108,]),'BAJA':([93,],[109,]),'FRONTAL':([94,],[111,]),'LATERAL':([94,],[112,]),'NO':([95,],[115,]),'SELF':([100,],[120,]),'OPONENTE':([100,],[121,]),'INICIA':([101,],[122,]),'PUNTO':([119,120,121,],[126,-49,-50,]),'MENOR':([131,132,133,],[139,-51,-52,]),'MAYOR':([131,132,133,],[140,-51,-52,]),'MENOR_IGUAL':([131,132,133,],[141,-51,-52,]),'MAYOR_IGUAL':([131,132,133,],[142,-51,-52,]),'IGUAL_IGUAL':([131,132,133,],[143,-51,-52,]),'DISTINTO':([131,132,133,],[144,-51,-52,]),'TURNOS_MAX':([145,],[149,]),'SINO':([147,],[150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'definiciones':([0,3,],[2,8,]),'definicion':([0,3,],[3,3,]),'cabecera':([0,3,],[4,4,]),'bloque_simulacion':([2,],[6,]),'cuerpo':([4,],[9,]),'stats':([4,],[10,]),'bloque_acciones':([10,],[15,]),'configuracion':([13,],[19,]),'bloque_combos':([15,],[21,]),'pelea':([19,],[25,]),'lista_acciones':([23,30,],[29,42,]),'accion':([23,30,],[30,30,]),'lista_combos':([28,39,],[38,52,]),'combo':([28,39,],[39,39,]),'lista_turnos':([36,48,],[47,61,]),'turno':([36,48,],[48,48,]),'lista_golpes':([43,44,66,],[54,57,74,]),'golpe':([43,44,66,],[55,55,55,]),'atributos':([67,90,],[75,103,]),'atributo':([67,90,],[76,76,]),'lista_instrucciones':([71,84,130,152,],[83,98,137,154,]),'instruccion':([71,84,130,152,],[84,84,84,84,]),'valor_altura':([93,],[106,]),'valor_forma':([94,],[110,]),'valor_giro':([95,],[113,]),'condicion':([100,],[118,]),'sujeto_condicion':([100,],[119,]),'lista_ids':([123,135,],[129,146,]),'atributo_condicion':([126,],[131,]),'operador':([131,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> definiciones bloque_simulacion','programa',2,'p_programa','interprete.py',27),
  ('definiciones -> definicion definiciones','definiciones',2,'p_definiciones','interprete.py',35),
  ('definiciones -> definicion','definiciones',1,'p_definiciones','interprete.py',36),
  ('definicion -> cabecera cuerpo LLAVE_CIERRA','definicion',3,'p_definicion','interprete.py',40),
  ('cabecera -> LUCHADOR ID LLAVE_ABRE','cabecera',3,'p_cabecera','interprete.py',44),
  ('cuerpo -> stats bloque_acciones bloque_combos','cuerpo',3,'p_cuerpo','interprete.py',49),
  ('stats -> STATS PAREN_ABRE HP IGUAL NUMERO COMA ST IGUAL NUMERO PAREN_CIERRA PUNTO_Y_COMA','stats',11,'p_stats','interprete.py',53),
  ('bloque_acciones -> ACCIONES LLAVE_ABRE lista_acciones LLAVE_CIERRA','bloque_acciones',4,'p_bloque_acciones','interprete.py',64),
  ('lista_acciones -> accion lista_acciones','lista_acciones',2,'p_lista_acciones','interprete.py',68),
  ('lista_acciones -> accion','lista_acciones',1,'p_lista_acciones','interprete.py',69),
  ('accion -> GOLPE DOS_PUNTOS lista_golpes PUNTO_Y_COMA','accion',4,'p_accion','interprete.py',73),
  ('accion -> PATADA DOS_PUNTOS lista_golpes PUNTO_Y_COMA','accion',4,'p_accion','interprete.py',74),
  ('accion -> BLOQUEO DOS_PUNTOS ID PUNTO_Y_COMA','accion',4,'p_accion','interprete.py',75),
  ('lista_golpes -> golpe','lista_golpes',1,'p_lista_golpes','interprete.py',84),
  ('lista_golpes -> golpe COMA lista_golpes','lista_golpes',3,'p_lista_golpes','interprete.py',85),
  ('golpe -> ID PAREN_ABRE atributos PAREN_CIERRA','golpe',4,'p_golpe','interprete.py',89),
  ('atributos -> atributo','atributos',1,'p_atributos','interprete.py',107),
  ('atributos -> atributo COMA atributos','atributos',3,'p_atributos','interprete.py',108),
  ('atributo -> DANIO IGUAL NUMERO','atributo',3,'p_atributo','interprete.py',118),
  ('atributo -> COSTO IGUAL NUMERO','atributo',3,'p_atributo','interprete.py',119),
  ('atributo -> ALTURA IGUAL valor_altura','atributo',3,'p_atributo','interprete.py',120),
  ('atributo -> FORMA IGUAL valor_forma','atributo',3,'p_atributo','interprete.py',121),
  ('atributo -> GIRATORIA IGUAL valor_giro','atributo',3,'p_atributo','interprete.py',122),
  ('valor_altura -> ALTA','valor_altura',1,'p_valor_altura','interprete.py',129),
  ('valor_altura -> MEDIA','valor_altura',1,'p_valor_altura','interprete.py',130),
  ('valor_altura -> BAJA','valor_altura',1,'p_valor_altura','interprete.py',131),
  ('valor_forma -> FRONTAL','valor_forma',1,'p_valor_forma','interprete.py',135),
  ('valor_forma -> LATERAL','valor_forma',1,'p_valor_forma','interprete.py',136),
  ('valor_giro -> SI','valor_giro',1,'p_valor_giro','interprete.py',140),
  ('valor_giro -> NO','valor_giro',1,'p_valor_giro','interprete.py',141),
  ('bloque_combos -> COMBOS LLAVE_ABRE lista_combos LLAVE_CIERRA','bloque_combos',4,'p_bloque_combos','interprete.py',149),
  ('lista_combos -> combo lista_combos','lista_combos',2,'p_lista_combos','interprete.py',153),
  ('lista_combos -> combo','lista_combos',1,'p_lista_combos','interprete.py',154),
  ('combo -> ID PAREN_ABRE ST_REQ IGUAL NUMERO PAREN_CIERRA LLAVE_ABRE lista_ids LLAVE_CIERRA','combo',9,'p_combo','interprete.py',158),
  ('lista_ids -> ID','lista_ids',1,'p_lista_ids','interprete.py',165),
  ('lista_ids -> ID COMA lista_ids','lista_ids',3,'p_lista_ids','interprete.py',166),
  ('bloque_simulacion -> SIMULACION LLAVE_ABRE configuracion pelea LLAVE_CIERRA','bloque_simulacion',5,'p_bloque_simulacion','interprete.py',174),
  ('configuracion -> CONFIG LLAVE_ABRE LUCHADORES DOS_PUNTOS ID VS ID PUNTO_Y_COMA INICIA DOS_PUNTOS ID PUNTO_Y_COMA TURNOS_MAX DOS_PUNTOS NUMERO PUNTO_Y_COMA LLAVE_CIERRA','configuracion',17,'p_configuracion','interprete.py',178),
  ('pelea -> PELEA LLAVE_ABRE lista_turnos LLAVE_CIERRA','pelea',4,'p_pelea','interprete.py',182),
  ('lista_turnos -> turno','lista_turnos',1,'p_lista_turnos','interprete.py',186),
  ('lista_turnos -> turno lista_turnos','lista_turnos',2,'p_lista_turnos','interprete.py',187),
  ('turno -> TURNO ID LLAVE_ABRE lista_instrucciones LLAVE_CIERRA','turno',5,'p_turno','interprete.py',191),
  ('lista_instrucciones -> instruccion','lista_instrucciones',1,'p_lista_instrucciones','interprete.py',195),
  ('lista_instrucciones -> instruccion lista_instrucciones','lista_instrucciones',2,'p_lista_instrucciones','interprete.py',196),
  ('instruccion -> USA ID PUNTO_Y_COMA','instruccion',3,'p_instruccion','interprete.py',200),
  ('instruccion -> SI PAREN_ABRE condicion PAREN_CIERRA LLAVE_ABRE lista_instrucciones LLAVE_CIERRA','instruccion',7,'p_instruccion','interprete.py',201),
  ('instruccion -> SI PAREN_ABRE condicion PAREN_CIERRA LLAVE_ABRE lista_instrucciones LLAVE_CIERRA SINO LLAVE_ABRE lista_instrucciones LLAVE_CIERRA','instruccion',11,'p_instruccion','interprete.py',202),
  ('condicion -> sujeto_condicion PUNTO atributo_condicion operador NUMERO','condicion',5,'p_condicion','interprete.py',211),
  ('sujeto_condicion -> SELF','sujeto_condicion',1,'p_sujeto_condicion','interprete.py',215),
  ('sujeto_condicion -> OPONENTE','sujeto_condicion',1,'p_sujeto_condicion','interprete.py',216),
  ('atributo_condicion -> HP','atributo_condicion',1,'p_atributo_condicion','interprete.py',220),
  ('atributo_condicion -> ST','atributo_condicion',1,'p_atributo_condicion','interprete.py',221),
  ('operador -> MENOR','operador',1,'p_operador','interprete.py',225),
  ('operador -> MAYOR','operador',1,'p_operador','interprete.py',226),
  ('operador -> MENOR_IGUAL','operador',1,'p_operador','interprete.py',227),
  ('operador -> MAYOR_IGUAL','operador',1,'p_operador','interprete.py',228),
  ('operador -> IGUAL_IGUAL','operador',1,'p_operador','interprete.py',229),
  ('operador -> DISTINTO','operador',1,'p_operador','interprete.py',230),
]
